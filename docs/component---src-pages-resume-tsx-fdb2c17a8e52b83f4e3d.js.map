{"version":3,"file":"component---src-pages-resume-tsx-fdb2c17a8e52b83f4e3d.js","mappings":"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","sources":["webpack://tpcstld-site/./src/common/Link.tsx","webpack://tpcstld-site/./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","webpack://tpcstld-site/./src/common/WebRoutes.tsx","webpack://tpcstld-site/./src/info-pages/Header.module.css","webpack://tpcstld-site/./src/info-pages/Header.tsx","webpack://tpcstld-site/./src/info-pages/PageWrapper.module.css","webpack://tpcstld-site/./src/info-pages/PageWrapper.tsx","webpack://tpcstld-site/./src/info-pages/ResumePage.module.css","webpack://tpcstld-site/./src/info-pages/ResumePage.tsx","webpack://tpcstld-site/./src/pages/resume.tsx"],"sourcesContent":["import {Link as GatsbyLink} from 'gatsby';\nimport {AnchorHTMLAttributes, ReactNode} from 'react';\n\ninterface LinkProps extends AnchorHTMLAttributes<HTMLAnchorElement> {\n  href: string;\n  children?: ReactNode;\n}\n\nexport default function Link({href, children, ...props}: LinkProps) {\n  const internal = /^\\/(?!\\/)/.test(href);\n\n  if (internal) {\n    return (\n      <GatsbyLink to={href} {...props}>\n        {children}\n      </GatsbyLink>\n    );\n  }\n\n  return (\n    <a href={href} {...props}>\n      {children}\n    </a>\n  );\n}\n","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","enum WebRoutes {\n  PROJECTS = '/',\n  RESUME = '/resume',\n  ABOUT = '/about',\n}\n\nexport default WebRoutes;\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"Header-module--title--z831Q\",\"name\":\"Header-module--name--jO2WY\",\"routeBanner\":\"Header-module--routeBanner--iRWGN\",\"route\":\"Header-module--route--unlLV\"};","import {Fragment} from 'react';\n\nimport Link from '../common/Link';\nimport WebRoutes from '../common/WebRoutes';\n\nimport styles from './Header.module.css';\n\ntype RouteData = {\n  name: string;\n  url: WebRoutes;\n};\n\nconst ROUTES: Array<RouteData> = [\n  {\n    name: 'Projects',\n    url: WebRoutes.PROJECTS,\n  },\n  {\n    name: 'Resume',\n    url: WebRoutes.RESUME,\n  },\n  {\n    name: 'About',\n    url: WebRoutes.ABOUT,\n  },\n];\n\ninterface RouteEntryProps {\n  currentRoute: WebRoutes;\n  route: RouteData;\n}\n\nfunction RouteEntry({currentRoute, route}: RouteEntryProps) {\n  if (currentRoute === route.url) {\n    return <strong>{route.name}</strong>;\n  }\n\n  return (\n    <Link className={styles.route} href={route.url}>\n      {route.name}\n    </Link>\n  );\n}\n\ninterface RouteBannerProps {\n  currentRoute: WebRoutes;\n}\n\nfunction RouteBanner({currentRoute}: RouteBannerProps) {\n  return (\n    <div className={styles.routeBanner}>\n      {ROUTES.map((route, index) => (\n        <Fragment key={route.url}>\n          {index > 0 ? <span>{' Â· '}</span> : null}\n          <RouteEntry currentRoute={currentRoute} route={route} />\n        </Fragment>\n      ))}\n    </div>\n  );\n}\n\ninterface HeaderProps {\n  currentRoute: WebRoutes;\n}\n\nexport default function Header({currentRoute}: HeaderProps) {\n  return (\n    <div>\n      <div className={styles.title}>\n        <h1 className={styles.name}>Jerry Jiang</h1>\n        <strong>Discord; University of Waterloo</strong>\n      </div>\n      <RouteBanner currentRoute={currentRoute} />\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"outerContainer\":\"PageWrapper-module--outerContainer--zN1eq\",\"container\":\"PageWrapper-module--container--JDwBF\"};","import {ReactNode} from 'react';\n\nimport styles from './PageWrapper.module.css';\n\ninterface PageWrapperProps {\n  children: ReactNode;\n}\n\nexport default function PageWrapper({children}: PageWrapperProps) {\n  return (\n    <div className={styles.outerContainer}>\n      <div className={styles.container}>{children}</div>\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ResumePage-module--container--WUf8d\",\"section\":\"ResumePage-module--section--+OFP-\",\"list\":\"ResumePage-module--list--CCxyb\",\"date\":\"ResumePage-module--date--pAmiG\",\"pdf\":\"ResumePage-module--pdf--xP0Xq\"};","import {ReactNode} from 'react';\nimport {Helmet} from 'react-helmet';\n\nimport WebRoutes from '../common/WebRoutes';\n\nimport Header from './Header';\nimport PageWrapper from './PageWrapper';\n\nimport styles from './ResumePage.module.css';\n\ntype WorkExperienceItem = {\n  company: string;\n  website: string;\n  location: string;\n  date: string;\n  title: string;\n  description: ReactNode;\n};\n\nconst WORK_EXPERIENCES: Array<WorkExperienceItem> = [\n  {\n    company: 'Discord',\n    website: 'https://discord.com',\n    location: 'San Francisco, California',\n    date: 'March 2020 - Present',\n    title: 'Senior Software Engineer',\n    description: (\n      <span>\n        Implemented watching multiple streams. Rebuilt all marketing pages for\n        \"Your Place to Talk\". Launched Stage channels, Stage discovery, and\n        Events.\n      </span>\n    ),\n  },\n  {\n    company: 'Facebook',\n    website: 'https://www.facebook.com',\n    location: 'Menlo Park, California',\n    date: 'July 2018 - March 2020',\n    title: 'Software Engineer - Data Warehouse',\n    description: (\n      <span>\n        Maintained and rebuilt Facebook's data replication system, a distributed\n        service responsible for reliably copying petabytes of data every day.\n      </span>\n    ),\n  },\n  {\n    company: 'Riot Games',\n    website: 'https://www.riotgames.com',\n    location: 'Los Angeles, California',\n    date: 'September 2017 - December 2017',\n    title: 'Software Engineering Intern - Accounts',\n    description: (\n      <>\n        <span>Maintained Riot's OAuth 2.0 and OpenID Connect services.</span>\n        <span>Helped implement a new account recovery redesign.</span>\n      </>\n    ),\n  },\n  {\n    company: 'Uber',\n    website: 'https://www.uber.com',\n    location: 'San Francisco, California',\n    date: 'January 2017 - April 2017',\n    title: 'Software Engineering Intern - Rider',\n    description: (\n      <span>\n        Improved the Android app by adding UI polish, adding a cancellation\n        survey tool, and implementing a redesign for pickups.\n      </span>\n    ),\n  },\n  {\n    company: 'Riot Games',\n    website: 'https://www.riotgames.com',\n    location: 'Los Angeles, California',\n    date: 'May 2016 - August 2016',\n    title: 'Software Engineering Intern - Insights Tech',\n    description: (\n      <span>\n        Helped design, build, and maintain the Real-Time Data Pipeline, which\n        indexes millions of messages per minute.\n      </span>\n    ),\n  },\n  {\n    company: 'Google',\n    website: 'https://www.google.com',\n    location: 'Kitchener, Waterloo',\n    date: 'September 2015 - December 2015',\n    title: 'Software Engineering Intern - Display Ads Infrastructure',\n    description: (\n      <span>\n        Maintained critical Display Ads binary, improved release processes,\n        migrated state machines to producer graphs.\n      </span>\n    ),\n  },\n  {\n    company: 'Coursera',\n    website: 'https://www.coursera.org',\n    location: 'Mountain View, California',\n    date: 'January 2015 - May 2015',\n    title: 'Data Infrastructure Engineering Intern',\n    description: (\n      <span>\n        Redesigned experiment platform, shipped{' '}\n        <a href=\"//github.com/coursera/dataduct\">Dataduct</a>, extended\n        accounting.\n      </span>\n    ),\n  },\n  {\n    company: 'Desire2Learn Incorporated',\n    website: 'https://www.d2l.com',\n    location: 'Kitchener, Waterloo',\n    date: 'April 2014 - August 2014',\n    title: 'Software Developer',\n    description: (\n      <span>\n        Built shiny features for{' '}\n        <a href=\"//www.brightspace.com/\">Brightspace</a>, fixed many bugs,\n        shipped metadata tool.\n      </span>\n    ),\n  },\n];\n\ninterface WorkExperienceProps {\n  item: WorkExperienceItem;\n}\n\nfunction WorkExperience({item}: WorkExperienceProps) {\n  return (\n    <ul className={styles.list}>\n      <a href={item.website}>\n        <strong>{item.company}</strong>\n      </a>{' '}\n      - {item.location}\n      <span className={styles.date}>{item.date}</span>\n      <br />\n      <span>\n        <strong>{item.title}</strong>\n      </span>\n      <br />\n      {item.description}\n    </ul>\n  );\n}\n\nexport default function ResumePage() {\n  return (\n    <PageWrapper>\n      <Helmet htmlAttributes={{lang: 'en'}}>\n        <title>Resume - Jerry Jiang (tpcstld)</title>\n        <meta name=\"description\" content=\"My resume!\" />\n      </Helmet>\n      <Header currentRoute={WebRoutes.RESUME} />\n      <div className={styles.container}>\n        <h4 className={styles.section}>\n          <strong>Technical Qualifications</strong>\n        </h4>\n        <ul className={styles.list}>\n          <span>\n            <strong>Languages:</strong> Typescript, Javascript, Python, Java,\n            Scala, C++, C#, Bash, SQL\n          </span>\n          <br />\n          <span>\n            <strong>Technologies:</strong> React, Flask, Node.js, AWS, GCP\n          </span>\n          <br />\n          <span>\n            <strong>Tools and IDEs:</strong> Git, SVN, Vim, IntelliJ, MySQL,\n            Â¯\\_(ã)_/Â¯\n          </span>\n        </ul>\n        <h4 className={styles.section}>\n          <strong>Work Experience</strong>\n        </h4>\n        {WORK_EXPERIENCES.map((item, i) => (\n          <WorkExperience key={i} item={item} />\n        ))}\n        <h4 className={styles.section}>\n          <strong>Education</strong>\n        </h4>\n        <ul className={styles.list}>\n          <strong>Software Engineering</strong>\n          <span className={styles.date}>Sept 2013 - May 2018</span>\n          <br />\n          <span>University of Waterloo - Waterloo, Ontario</span>\n        </ul>\n        <div className={styles.pdf}>\n          <a href=\"/resume/resume.pdf\">PDF, detailed version</a>\n        </div>\n      </div>\n    </PageWrapper>\n  );\n}\n","import ResumePage from '../info-pages/ResumePage';\n\nexport default ResumePage;\n"],"names":["Link","href","children","props","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","test","_jsx","GatsbyLink","to","WebRoutes","ROUTES","name","url","RouteEntry","currentRoute","route","className","styles","RouteBanner","map","index","_jsxs","Fragment","Header","PageWrapper","WORK_EXPERIENCES","company","website","location","date","title","description","WorkExperience","item","Helmet","htmlAttributes","lang","content"],"sourceRoot":""}