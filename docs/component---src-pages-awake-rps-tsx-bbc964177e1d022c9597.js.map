{"version":3,"file":"component---src-pages-awake-rps-tsx-bbc964177e1d022c9597.js","mappings":"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","sources":["webpack://tpcstld-site/./src/info-pages/PageWrapper.module.css","webpack://tpcstld-site/./src/info-pages/PageWrapper.tsx","webpack://tpcstld-site/./src/awake-rps/AwakeRpsPage.tsx","webpack://tpcstld-site/./src/awake-rps/AwakeRpsPage.module.css","webpack://tpcstld-site/./src/pages/awake-rps.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"outerContainer\":\"PageWrapper-module--outerContainer--1G6yD\",\"container\":\"PageWrapper-module--container--2SuZJ\"};","import {ReactNode} from 'react';\n\nimport styles from './PageWrapper.module.css';\n\ninterface PageWrapperProps {\n  children: ReactNode;\n}\n\nexport default function PageWrapper({children}: PageWrapperProps) {\n  return (\n    <div className={styles.outerContainer}>\n      <div className={styles.container}>{children}</div>\n    </div>\n  );\n}\n","import {CSSProperties, useCallback, useState} from 'react';\nimport {Helmet} from 'react-helmet';\n\nimport PageWrapper from '../info-pages/PageWrapper';\n\nimport styles from './AwakeRpsPage.module.css';\n\nenum Choices {\n  ROCK = 'Rock',\n  PAPER = 'Paper',\n  SCISSORS = 'Scissors',\n}\n\nconst MAX_CHOICE = 3;\n\nfunction getProbabilityStyles(probability: number): string {\n  if (probability === 0) {\n    return '';\n  }\n\n  if (probability < 0) {\n    return styles.bad;\n  }\n\n  return styles.good;\n}\n\ntype ExpectedValue = {\n  ev: number;\n  lossChance: number;\n};\n\nfunction calculateExpectedValue(\n  currentChosen: number,\n  winnerChosen: number,\n  loserChosen: number,\n): ExpectedValue {\n  const winnerLeft = MAX_CHOICE - winnerChosen;\n  const currentLeft = MAX_CHOICE - currentChosen;\n  const loserLeft = MAX_CHOICE - loserChosen;\n\n  const totalLeft = winnerLeft + currentLeft + loserLeft;\n\n  return {\n    ev: (1 * winnerLeft + 0 * currentLeft + -1 * loserLeft) / totalLeft,\n    lossChance: loserLeft / totalLeft,\n  };\n}\n\ninterface PlaySelectorProps {\n  numItem: number;\n  setNumItem: (newNum: number) => void;\n  name: Choices;\n}\n\nfunction PlaySelector({numItem, setNumItem, name}: PlaySelectorProps) {\n  return (\n    <div className={styles.selectorItem}>\n      <button\n        className={styles.selectorButton}\n        onClick={() => setNumItem(numItem + 1)}\n        disabled={numItem === MAX_CHOICE}\n      >\n        <span className={styles.selectorButtonText}>{name}</span>\n      </button>\n      <div className={styles.selectorItemCount}>{numItem}</div>\n    </div>\n  );\n}\n\ninterface AnalysisSectionProps {\n  numRock: number;\n  numScissors: number;\n  numPaper: number;\n}\n\nfunction AnalysisSection({\n  numRock,\n  numPaper,\n  numScissors,\n}: AnalysisSectionProps) {\n  if (numRock === 0 && numPaper === 0 && numScissors === 0) {\n    return <span>Rock gang for life!</span>;\n  }\n\n  if (\n    numRock === MAX_CHOICE &&\n    numPaper === MAX_CHOICE &&\n    numScissors === MAX_CHOICE\n  ) {\n    return <span>Press reset for the new round!</span>;\n  }\n\n  const expectedValues = {\n    [Choices.ROCK]: calculateExpectedValue(numRock, numScissors, numPaper),\n    [Choices.PAPER]: calculateExpectedValue(numPaper, numRock, numScissors),\n    [Choices.SCISSORS]: calculateExpectedValue(numScissors, numPaper, numRock),\n  };\n\n  console.log(expectedValues);\n\n  const bestOption = Object.entries(expectedValues).sort(\n    ([_firstChoice, firstEv], [_secondChoice, secondEv]) => {\n      if (firstEv.ev === secondEv.ev) {\n        return 0;\n      }\n\n      return firstEv.ev > secondEv.ev ? -1 : 1;\n    },\n  )[0];\n\n  const bestChoice = bestOption[0];\n\n  return (\n    <table className={styles.table}>\n      <thead className={styles.tableHeader}>\n        <th className={styles.heading}>Choice</th>\n        <th className={styles.heading}>EV</th>\n        <th className={styles.heading}>Loss</th>\n      </thead>\n      {Object.entries(expectedValues).map(([choice, ev]) => (\n        <tr key={choice}>\n          <td\n            className={`${styles.choices} ${\n              bestChoice === choice ? styles.good : ''\n            }`}\n          >\n            {choice}\n          </td>\n          <td className={`${styles.numbers} ${getProbabilityStyles(ev.ev)}`}>\n            {ev.ev.toFixed(2)}\n          </td>\n          <td\n            className={`${styles.numbers} ${getProbabilityStyles(\n              -ev.lossChance,\n            )}`}\n          >\n            {ev.lossChance.toFixed(2)}\n          </td>\n        </tr>\n      ))}\n    </table>\n  );\n}\n\nexport default function AwakeRpsPage() {\n  const [numRock, setNumRock] = useState(0);\n  const [numPaper, setNumPaper] = useState(0);\n  const [numScissors, setNumScissors] = useState(0);\n\n  const handleReset = useCallback(() => {\n    setNumRock(0);\n    setNumPaper(0);\n    setNumScissors(0);\n  }, []);\n\n  return (\n    <PageWrapper>\n      <Helmet htmlAttributes={{lang: 'en'}}>\n        <title>Awake RPS Calculator</title>\n        <meta\n          name=\"description\"\n          content=\"MapleStory Awake Rock Paper Scissors calculator.\"\n        />\n      </Helmet>\n      <div className={styles.header}>\n        <h1>Awake RPS Calculator</h1>\n        <button className={styles.reset} onClick={handleReset}>\n          Reset\n        </button>\n      </div>\n      <div className={styles.selectorContainer}>\n        <PlaySelector\n          name={Choices.ROCK}\n          numItem={numRock}\n          setNumItem={setNumRock}\n        />\n        <PlaySelector\n          name={Choices.PAPER}\n          numItem={numPaper}\n          setNumItem={setNumPaper}\n        />\n        <PlaySelector\n          name={Choices.SCISSORS}\n          numItem={numScissors}\n          setNumItem={setNumScissors}\n        />\n      </div>\n      <div className={styles.dataContainer}>\n        <h2>Results</h2>\n        <AnalysisSection\n          numRock={numRock}\n          numPaper={numPaper}\n          numScissors={numScissors}\n        />\n      </div>\n    </PageWrapper>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"header\":\"AwakeRpsPage-module--header--2LkZn\",\"reset\":\"AwakeRpsPage-module--reset--1FbmH\",\"selectorContainer\":\"AwakeRpsPage-module--selectorContainer--4ocZP\",\"selectorItem\":\"AwakeRpsPage-module--selectorItem--2cMm4\",\"selectorButton\":\"AwakeRpsPage-module--selectorButton--2Ykmn\",\"selectorButtonText\":\"AwakeRpsPage-module--selectorButtonText--2Br41\",\"selectorItemCount\":\"AwakeRpsPage-module--selectorItemCount--1OqVa\",\"table\":\"AwakeRpsPage-module--table--2yJ9W\",\"choices\":\"AwakeRpsPage-module--choices--3zVYM\",\"numbers\":\"AwakeRpsPage-module--numbers--32Grx\",\"heading\":\"AwakeRpsPage-module--heading--3C4CF\",\"good\":\"AwakeRpsPage-module--good--3Gd07\",\"bad\":\"AwakeRpsPage-module--bad--1yHye\"};","import AwakeRpsPage from '../awake-rps/AwakeRpsPage';\n\nexport default AwakeRpsPage;\n"],"names":["PageWrapper","children","className","styles","Choices","getProbabilityStyles","probability","calculateExpectedValue","currentChosen","winnerChosen","loserChosen","winnerLeft","currentLeft","loserLeft","totalLeft","ev","lossChance","PlaySelector","numItem","setNumItem","name","onClick","disabled","AnalysisSection","numRock","numPaper","numScissors","expectedValues","ROCK","PAPER","SCISSORS","console","log","bestChoice","Object","entries","sort","firstEv","secondEv","map","choice","toFixed","useState","setNumRock","setNumPaper","setNumScissors","handleReset","useCallback","Helmet","htmlAttributes","lang","content"],"sourceRoot":""}