{"version":3,"sources":["webpack:///./src/codenames/CodenamesAgentPage.tsx","webpack:///./src/pages/codenames/index.tsx"],"names":["getInitialBoardState","gameBoard","map","card","type","CodenamesCardType","UNKNOWN","CodenamesAgentPage","gameState","useCodenamesGameState","useState","board","setBoard","useEffect","numBlueLeft","filter","index","BLUE","length","numRedLeft","RED","PageWrapper","Helmet","htmlAttributes","lang","name","content","className","styles","CodenamesBoard","onSelect","newBoard","remaining","blue","red"],"mappings":"2NAWA,SAASA,EACPC,GAEA,OAAOA,EAAUC,KAAI,SAACC,GAAD,wBAChBA,EADgB,CAEnBC,KAAMC,IAAkBC,aCdbC,UDkBA,WACb,IAAMC,EAAYC,cADyB,EAGjBC,mBAASV,EAAqBQ,EAAUG,QAA3DA,EAHoC,KAG7BC,EAH6B,KAK3CC,qBAAU,WACRD,EAASZ,EAAqBQ,EAAUG,UACvC,CAACH,EAAUG,QAQd,IAAMG,EAAcN,EAAUG,MAAMI,QAClC,SAACZ,EAAMa,GAAP,OACEb,EAAKC,OAASC,IAAkBY,MAChCN,EAAMK,GAAOZ,OAASC,IAAkBC,WAC1CY,OACIC,EAAaX,EAAUG,MAAMI,QACjC,SAACZ,EAAMa,GAAP,OACEb,EAAKC,OAASC,IAAkBe,KAChCT,EAAMK,GAAOZ,OAASC,IAAkBC,WAC1CY,OAEF,OACE,eAACG,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,CAAQC,eAAgB,CAACC,KAAM,MAA/B,UACE,8CACA,sBAAMC,KAAK,cAAcC,QAAQ,gCAGnC,qBAAKC,UAAWC,IAAOjB,MAAvB,SACE,cAACkB,EAAA,EAAD,CAAgBlB,MAAOA,EAAOmB,SAzBpC,SAAsBd,GACpB,IAAMe,EAAW,YAAIpB,GACrBoB,EAASf,GAAOZ,KAAOI,EAAUG,MAAMK,GAAOZ,KAC9CQ,EAASmB,QAyBP,sBAAKJ,UAAWC,IAAOI,UAAvB,UACE,sBAAML,UAAWC,IAAOK,KAAxB,SAA+BnB,IAC/B,sBAAMa,UAAWC,IAAOM,IAAxB,SAA8Bf","file":"component---src-pages-codenames-index-tsx-f32a72dc9a533e2626eb.js","sourcesContent":["import {useEffect, useState} from 'react';\nimport {Helmet} from 'react-helmet';\n\nimport PageWrapper from '../info-pages/PageWrapper';\n\nimport {CodenamesBoardType, CodenamesCardType} from './CodenameConstants';\nimport CodenamesBoard from './CodenamesBoard';\nimport useCodenamesGameState from './useCodenamesGameState';\n\nimport styles from './CodenamesAgentPage.module.css';\n\nfunction getInitialBoardState(\n  gameBoard: CodenamesBoardType,\n): CodenamesBoardType {\n  return gameBoard.map((card) => ({\n    ...card,\n    type: CodenamesCardType.UNKNOWN,\n  }));\n}\n\nexport default function CodenamesAgentPage() {\n  const gameState = useCodenamesGameState();\n\n  const [board, setBoard] = useState(getInitialBoardState(gameState.board));\n\n  useEffect(() => {\n    setBoard(getInitialBoardState(gameState.board));\n  }, [gameState.board]);\n\n  function handleSelect(index: number) {\n    const newBoard = [...board];\n    newBoard[index].type = gameState.board[index].type;\n    setBoard(newBoard);\n  }\n\n  const numBlueLeft = gameState.board.filter(\n    (card, index) =>\n      card.type === CodenamesCardType.BLUE &&\n      board[index].type === CodenamesCardType.UNKNOWN,\n  ).length;\n  const numRedLeft = gameState.board.filter(\n    (card, index) =>\n      card.type === CodenamesCardType.RED &&\n      board[index].type === CodenamesCardType.UNKNOWN,\n  ).length;\n\n  return (\n    <PageWrapper>\n      <Helmet htmlAttributes={{lang: 'en'}}>\n        <title>Codenames</title>\n        <meta name=\"description\" content=\"Online codegames player.\" />\n      </Helmet>\n\n      <div className={styles.board}>\n        <CodenamesBoard board={board} onSelect={handleSelect} />\n      </div>\n\n      <div className={styles.remaining}>\n        <span className={styles.blue}>{numBlueLeft}</span>\n        <span className={styles.red}>{numRedLeft}</span>\n      </div>\n    </PageWrapper>\n  );\n}\n","import CodenamesAgentPage from '../../codenames/CodenamesAgentPage';\n\nexport default CodenamesAgentPage;\n"],"sourceRoot":""}