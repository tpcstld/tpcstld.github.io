{"version":3,"file":"component---src-pages-awake-rps-tsx-d7a02eaa0de0da70b362.js","mappings":"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","sources":["webpack://tpcstld-site/./src/info-pages/PageWrapper.module.css","webpack://tpcstld-site/./src/info-pages/PageWrapper.tsx","webpack://tpcstld-site/./src/awake-rps/AwakeRpsPage.tsx","webpack://tpcstld-site/./src/awake-rps/AwakeRpsPage.module.css","webpack://tpcstld-site/./src/pages/awake-rps.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"outerContainer\":\"PageWrapper-module--outerContainer--ccdd5\",\"container\":\"PageWrapper-module--container--243c0\"};","import {ReactNode} from 'react';\n\nimport styles from './PageWrapper.module.css';\n\ninterface PageWrapperProps {\n  children: ReactNode;\n}\n\nexport default function PageWrapper({children}: PageWrapperProps) {\n  return (\n    <div className={styles.outerContainer}>\n      <div className={styles.container}>{children}</div>\n    </div>\n  );\n}\n","import {CSSProperties, useCallback, useState} from 'react';\nimport {Helmet} from 'react-helmet';\n\nimport PageWrapper from '../info-pages/PageWrapper';\n\nimport styles from './AwakeRpsPage.module.css';\n\nenum Choices {\n  ROCK = 'Rock',\n  PAPER = 'Paper',\n  SCISSORS = 'Scissors',\n}\n\nconst MAX_CHOICE = 3;\n\nfunction getProbabilityStyles(probability: number): string {\n  if (probability === 0) {\n    return '';\n  }\n\n  if (probability < 0) {\n    return styles.bad;\n  }\n\n  return styles.good;\n}\n\ntype ExpectedValue = {\n  ev: number;\n  lossChance: number;\n};\n\nfunction calculateExpectedValue(\n  currentChosen: number,\n  winnerChosen: number,\n  loserChosen: number,\n): ExpectedValue {\n  const winnerLeft = MAX_CHOICE - winnerChosen;\n  const currentLeft = MAX_CHOICE - currentChosen;\n  const loserLeft = MAX_CHOICE - loserChosen;\n\n  const totalLeft = winnerLeft + currentLeft + loserLeft;\n\n  return {\n    ev: (1 * winnerLeft + 0 * currentLeft + -1 * loserLeft) / totalLeft,\n    lossChance: loserLeft / totalLeft,\n  };\n}\n\ninterface PlaySelectorProps {\n  numItem: number;\n  setNumItem: (newNum: number) => void;\n  name: Choices;\n}\n\nfunction PlaySelector({numItem, setNumItem, name}: PlaySelectorProps) {\n  return (\n    <div className={styles.selectorItem}>\n      <button\n        className={styles.selectorButton}\n        onClick={() => setNumItem(numItem + 1)}\n        disabled={numItem === MAX_CHOICE}\n      >\n        <span className={styles.selectorButtonText}>{name}</span>\n      </button>\n      <div className={styles.selectorItemCount}>{numItem}</div>\n    </div>\n  );\n}\n\ninterface AnalysisSectionProps {\n  numRock: number;\n  numScissors: number;\n  numPaper: number;\n}\n\nfunction AnalysisSection({\n  numRock,\n  numPaper,\n  numScissors,\n}: AnalysisSectionProps) {\n  if (numRock === 0 && numPaper === 0 && numScissors === 0) {\n    return <span>Rock gang for life!</span>;\n  }\n\n  if (\n    numRock === MAX_CHOICE &&\n    numPaper === MAX_CHOICE &&\n    numScissors === MAX_CHOICE\n  ) {\n    return <span>Press reset for the new round!</span>;\n  }\n\n  const expectedValues = {\n    [Choices.ROCK]: calculateExpectedValue(numRock, numScissors, numPaper),\n    [Choices.PAPER]: calculateExpectedValue(numPaper, numRock, numScissors),\n    [Choices.SCISSORS]: calculateExpectedValue(numScissors, numPaper, numRock),\n  };\n\n  console.log(expectedValues);\n\n  const bestOption = Object.entries(expectedValues).sort(\n    ([_firstChoice, firstEv], [_secondChoice, secondEv]) => {\n      if (firstEv.ev === secondEv.ev) {\n        return 0;\n      }\n\n      return firstEv.ev > secondEv.ev ? -1 : 1;\n    },\n  )[0];\n\n  const bestChoice = bestOption[0];\n\n  return (\n    <table className={styles.table}>\n      <thead className={styles.tableHeader}>\n        <th className={styles.heading}>Choice</th>\n        <th className={styles.heading}>EV</th>\n        <th className={styles.heading}>Loss</th>\n      </thead>\n      {Object.entries(expectedValues).map(([choice, ev]) => (\n        <tr key={choice}>\n          <td\n            className={`${styles.choices} ${\n              bestChoice === choice ? styles.good : ''\n            }`}\n          >\n            {choice}\n          </td>\n          <td className={`${styles.numbers} ${getProbabilityStyles(ev.ev)}`}>\n            {ev.ev.toFixed(2)}\n          </td>\n          <td\n            className={`${styles.numbers} ${getProbabilityStyles(\n              -ev.lossChance,\n            )}`}\n          >\n            {ev.lossChance.toFixed(2)}\n          </td>\n        </tr>\n      ))}\n    </table>\n  );\n}\n\nexport default function AwakeRpsPage() {\n  const [numRock, setNumRock] = useState(0);\n  const [numPaper, setNumPaper] = useState(0);\n  const [numScissors, setNumScissors] = useState(0);\n\n  const handleReset = useCallback(() => {\n    setNumRock(0);\n    setNumPaper(0);\n    setNumScissors(0);\n  }, []);\n\n  return (\n    <PageWrapper>\n      <Helmet htmlAttributes={{lang: 'en'}}>\n        <title>Awake RPS Calculator</title>\n        <meta\n          name=\"description\"\n          content=\"MapleStory Awake Rock Paper Scissors calculator.\"\n        />\n      </Helmet>\n      <div className={styles.header}>\n        <h1>Awake RPS Calculator</h1>\n        <button className={styles.reset} onClick={handleReset}>\n          Reset\n        </button>\n      </div>\n      <div className={styles.selectorContainer}>\n        <PlaySelector\n          name={Choices.ROCK}\n          numItem={numRock}\n          setNumItem={setNumRock}\n        />\n        <PlaySelector\n          name={Choices.PAPER}\n          numItem={numPaper}\n          setNumItem={setNumPaper}\n        />\n        <PlaySelector\n          name={Choices.SCISSORS}\n          numItem={numScissors}\n          setNumItem={setNumScissors}\n        />\n      </div>\n      <div className={styles.dataContainer}>\n        <h2>Results</h2>\n        <AnalysisSection\n          numRock={numRock}\n          numPaper={numPaper}\n          numScissors={numScissors}\n        />\n      </div>\n    </PageWrapper>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"header\":\"AwakeRpsPage-module--header--3b9aa\",\"reset\":\"AwakeRpsPage-module--reset--dcf0f\",\"selectorContainer\":\"AwakeRpsPage-module--selectorContainer--8086a\",\"selectorItem\":\"AwakeRpsPage-module--selectorItem--da7f1\",\"selectorButton\":\"AwakeRpsPage-module--selectorButton--28d89\",\"selectorButtonText\":\"AwakeRpsPage-module--selectorButtonText--ce534\",\"selectorItemCount\":\"AwakeRpsPage-module--selectorItemCount--35a4f\",\"table\":\"AwakeRpsPage-module--table--66387\",\"choices\":\"AwakeRpsPage-module--choices--b811e\",\"numbers\":\"AwakeRpsPage-module--numbers--2d9b9\",\"heading\":\"AwakeRpsPage-module--heading--c12e9\",\"good\":\"AwakeRpsPage-module--good--a9a63\",\"bad\":\"AwakeRpsPage-module--bad--950c2\"};","import AwakeRpsPage from '../awake-rps/AwakeRpsPage';\n\nexport default AwakeRpsPage;\n"],"names":["PageWrapper","children","_jsx","className","styles","Choices","MAX_CHOICE","getProbabilityStyles","probability","calculateExpectedValue","currentChosen","winnerChosen","loserChosen","winnerLeft","currentLeft","loserLeft","totalLeft","ev","lossChance","PlaySelector","numItem","setNumItem","name","_jsxs","onClick","disabled","AnalysisSection","numRock","numPaper","numScissors","expectedValues","ROCK","PAPER","SCISSORS","console","log","bestChoice","Object","entries","sort","firstEv","secondEv","map","choice","toFixed","useState","setNumRock","setNumPaper","setNumScissors","handleReset","useCallback","Helmet","htmlAttributes","lang","content"],"sourceRoot":""}